/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gestion;

import com.itextpdf.text.BaseColor;
import javax.swing.BorderFactory;

import java.awt.Color;

import java.awt.Graphics;
import javax.swing.DefaultListModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;

import com.itextpdf.text.Image;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * Esta clase representa la ventana principal de la aplicación.
 ** <p>
 * Contiene la inicialización de componentes gráficos y la configuración inicial
 * </p>
 *
 * @author emont
 * @version 1.0
 */
public class Ventana extends javax.swing.JFrame {

    int num = 0;
    DefaultListModel<String> lista = new DefaultListModel<>();
    DefaultListModel<Categoria> listaCategorias = new DefaultListModel<>();
    // DefaultListModel<String> listaColores = new DefaultListModel<>();
    DefaultListModel<String> gastosLista = new DefaultListModel<>();
    int grados = 0;
    int comienzo = 0;
    Color color;
    //añadimos lo siquiente para luego poder poner un fondo de color en las tablas de los informes
    BaseColor baseColor;

    /**
     * Constructor
     */
    public Ventana() {
        initComponents();
        //personalizamos la barra de desplazamiento
        jScrollPane1.getVerticalScrollBar().setUI(new PersonalizarBarra());
        jScrollPane1.getHorizontalScrollBar().setUI(new PersonalizarBarra());

        //Categorias por defecto
        color = new Color(79, 179, 213);
        baseColor = new BaseColor(79, 179, 213);
        Categoria cat1 = new Categoria(color, baseColor, "Deporte");
        listaCategorias.addElement(cat1);

        color = new Color(255, 204, 51);
        baseColor = new BaseColor(255, 204, 51);
        Categoria cat2 = new Categoria(color, baseColor, "Comida");
        listaCategorias.addElement(cat2);

        color = new Color(0, 153, 0);
        baseColor = new BaseColor(0, 153, 0);
        Categoria cat3 = new Categoria(color, baseColor, "Ropa");
        listaCategorias.addElement(cat3);

        lista.addElement(cat1.getNombre());
        lista.addElement(cat2.getNombre());
        lista.addElement(cat3.getNombre());

        jTextField_motivo.setText("Concepto");
        jTextField_gastosNuevos.setText("Gasto €");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        kGradientPanel_TITULO = new com.k33ptoo.components.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_bienvenida = new javax.swing.JLabel();
        jTextField_motivo = new javax.swing.JTextField();
        jTextField_gastosNuevos = new javax.swing.JTextField();
        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_categorias = new javax.swing.JList<>();
        kButton_InsertarNuevaCat = new com.k33ptoo.components.KButton();
        Colores = new javax.swing.JPanel();
        kGradientPanel_DATOS = new com.k33ptoo.components.KGradientPanel();
        kButton_GenerarInforme = new com.k33ptoo.components.KButton();
        kButton_Grafica = new com.k33ptoo.components.KButton();
        jLabel_DATOS_ultimo = new javax.swing.JLabel();
        jLabel_DATOS_antepenultimo = new javax.swing.JLabel();
        jLabel_DATOS_penultimo = new javax.swing.JLabel();
        jLabel_DATOS_Titulo = new javax.swing.JLabel();
        jLabel_DATOS_antepenultimoColor = new javax.swing.JLabel();
        jLabel_DATOS_penultimoColor = new javax.swing.JLabel();
        jLabel_DATOS_ultimoColor = new javax.swing.JLabel();
        jLabel_DATOS_antepenultimoNombre = new javax.swing.JLabel();
        jLabel_DATOS_penultimoNombre = new javax.swing.JLabel();
        jLabel_DATOS_ultimo_Nombre = new javax.swing.JLabel();
        jLabel_DATOS_ultimoGasto = new javax.swing.JLabel();
        jLabel_DATOS_penultimoGasto = new javax.swing.JLabel();
        jLabel_DATOS_antepenultimoGasto = new javax.swing.JLabel();
        kButton_Insertar = new com.k33ptoo.components.KButton();
        kButton_NuevoColor = new com.k33ptoo.components.KButton();
        jTextField_nuevaCategoria = new javax.swing.JTextField();
        kButton_InsertarNuevoGasto = new com.k33ptoo.components.KButton();
        jLabel_error = new javax.swing.JLabel();
        jLabel_infoE = new javax.swing.JLabel();
        jLabel_infoC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setBackground(new java.awt.Color(239, 239, 239));
        kGradientPanel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel1.setkGradientFocus(150);
        kGradientPanel1.setkStartColor(new java.awt.Color(21, 80, 80));
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                kGradientPanel1MouseEntered(evt);
            }
        });
        kGradientPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kGradientPanel1KeyPressed(evt);
            }
        });

        kGradientPanel_TITULO.setBackground(new java.awt.Color(0, 102, 102));
        kGradientPanel_TITULO.setkBorderRadius(1);
        kGradientPanel_TITULO.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel_TITULO.setkGradientFocus(0);
        kGradientPanel_TITULO.setkStartColor(new java.awt.Color(167, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon("G:\\Mi unidad\\DESARROLLO DE INTERFACES\\EJERCICIOS\\imgs\\moneda.png")); // NOI18N

        jLabel_bienvenida.setFont(new java.awt.Font("Tw Cen MT", 1, 36)); // NOI18N
        jLabel_bienvenida.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_bienvenida.setText("Gestión de gastos");

        javax.swing.GroupLayout kGradientPanel_TITULOLayout = new javax.swing.GroupLayout(kGradientPanel_TITULO);
        kGradientPanel_TITULO.setLayout(kGradientPanel_TITULOLayout);
        kGradientPanel_TITULOLayout.setHorizontalGroup(
            kGradientPanel_TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel_TITULOLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel_bienvenida)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel_TITULOLayout.setVerticalGroup(
            kGradientPanel_TITULOLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel_TITULOLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel_TITULOLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_bienvenida)
                .addGap(19, 19, 19))
        );

        jTextField_motivo.setBackground(new java.awt.Color(0, 102, 102));
        jTextField_motivo.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField_motivo.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_motivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_motivo.setText("cena empresa");
        jTextField_motivo.setToolTipText("Concepto");
        jTextField_motivo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(167, 204, 204), 2, true));
        jTextField_motivo.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jTextField_motivo.setOpaque(true);
        jTextField_motivo.setSelectionColor(new java.awt.Color(167, 204, 204));
        jTextField_motivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_motivoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_motivoFocusLost(evt);
            }
        });
        jTextField_motivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_motivoKeyPressed(evt);
            }
        });

        jTextField_gastosNuevos.setBackground(new java.awt.Color(0, 102, 102));
        jTextField_gastosNuevos.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField_gastosNuevos.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_gastosNuevos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_gastosNuevos.setText("300");
        jTextField_gastosNuevos.setToolTipText("Gasto");
        jTextField_gastosNuevos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(167, 204, 204), 2, true));
        jTextField_gastosNuevos.setName("Gasto"); // NOI18N
        jTextField_gastosNuevos.setSelectionColor(new java.awt.Color(167, 204, 204));
        jTextField_gastosNuevos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_gastosNuevosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_gastosNuevosFocusLost(evt);
            }
        });
        jTextField_gastosNuevos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_gastosNuevosKeyPressed(evt);
            }
        });

        kGradientPanel2.setBackground(new java.awt.Color(0, 102, 102));
        kGradientPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(167, 204, 204), 2, true));
        kGradientPanel2.setkEndColor(new java.awt.Color(167, 204, 204));
        kGradientPanel2.setkFillBackground(false);
        kGradientPanel2.setkGradientFocus(-50);
        kGradientPanel2.setkStartColor(new java.awt.Color(167, 204, 204));

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jList_categorias.setBackground(new java.awt.Color(0, 102, 102));
        jList_categorias.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jList_categorias.setForeground(new java.awt.Color(255, 255, 255));
        jList_categorias.setModel(lista);
        jList_categorias.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList_categorias.setToolTipText("");
        jList_categorias.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jList_categorias.setName(""); // NOI18N
        jList_categorias.setNextFocusableComponent(jTextField_gastosNuevos);
        jList_categorias.setSelectionBackground(new java.awt.Color(190, 96, 0));
        jList_categorias.setSelectionForeground(new java.awt.Color(229, 229, 229));
        jList_categorias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_categoriasKeyPressed(evt);
            }
        });
        jList_categorias.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList_categoriasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList_categorias);

        kButton_InsertarNuevaCat.setForeground(new java.awt.Color(51, 51, 51));
        kButton_InsertarNuevaCat.setText("Nueva categoría");
        kButton_InsertarNuevaCat.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_InsertarNuevaCat.setkBackGroundColor(new java.awt.Color(229, 229, 229));
        kButton_InsertarNuevaCat.setkEndColor(new java.awt.Color(35, 147, 147));
        kButton_InsertarNuevaCat.setkHoverColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevaCat.setkHoverEndColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevaCat.setkHoverForeGround(new java.awt.Color(167, 204, 204));
        kButton_InsertarNuevaCat.setkHoverStartColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevaCat.setkIndicatorColor(new java.awt.Color(167, 204, 204));
        kButton_InsertarNuevaCat.setkPressedColor(new java.awt.Color(0, 51, 51));
        kButton_InsertarNuevaCat.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_InsertarNuevaCat.setkStartColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevaCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_InsertarNuevaCatActionPerformed(evt);
            }
        });

        Colores.setBackground(new java.awt.Color(21, 80, 80));
        Colores.setFocusable(false);

        javax.swing.GroupLayout ColoresLayout = new javax.swing.GroupLayout(Colores);
        Colores.setLayout(ColoresLayout);
        ColoresLayout.setHorizontalGroup(
            ColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 42, Short.MAX_VALUE)
        );
        ColoresLayout.setVerticalGroup(
            ColoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                        .addComponent(Colores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                        .addGap(0, 25, Short.MAX_VALUE)
                        .addComponent(kButton_InsertarNuevaCat, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(Colores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(kButton_InsertarNuevaCat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        kGradientPanel_DATOS.setBackground(new java.awt.Color(0, 102, 102));
        kGradientPanel_DATOS.setkEndColor(new java.awt.Color(0, 102, 102));
        kGradientPanel_DATOS.setkGradientFocus(0);
        kGradientPanel_DATOS.setkStartColor(new java.awt.Color(0, 102, 102));

        kButton_GenerarInforme.setBorder(null);
        kButton_GenerarInforme.setText("Generar informe (pdf, csv)");
        kButton_GenerarInforme.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_GenerarInforme.setkBackGroundColor(new java.awt.Color(157, 37, 50));
        kButton_GenerarInforme.setkEndColor(new java.awt.Color(255, 204, 0));
        kButton_GenerarInforme.setkHoverColor(new java.awt.Color(190, 96, 0));
        kButton_GenerarInforme.setkHoverEndColor(new java.awt.Color(190, 96, 0));
        kButton_GenerarInforme.setkHoverForeGround(new java.awt.Color(239, 239, 239));
        kButton_GenerarInforme.setkHoverStartColor(new java.awt.Color(190, 96, 0));
        kButton_GenerarInforme.setkIndicatorColor(new java.awt.Color(109, 37, 50));
        kButton_GenerarInforme.setkPressedColor(new java.awt.Color(133, 78, 45));
        kButton_GenerarInforme.setkSelectedColor(new java.awt.Color(133, 78, 45));
        kButton_GenerarInforme.setkStartColor(new java.awt.Color(190, 96, 0));
        kButton_GenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_GenerarInformeActionPerformed(evt);
            }
        });

        kButton_Grafica.setBorder(null);
        kButton_Grafica.setText("Datos");
        kButton_Grafica.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_Grafica.setkBackGroundColor(new java.awt.Color(157, 37, 50));
        kButton_Grafica.setkEndColor(new java.awt.Color(255, 204, 0));
        kButton_Grafica.setkHoverColor(new java.awt.Color(190, 96, 0));
        kButton_Grafica.setkHoverEndColor(new java.awt.Color(190, 96, 0));
        kButton_Grafica.setkHoverForeGround(new java.awt.Color(239, 239, 239));
        kButton_Grafica.setkHoverStartColor(new java.awt.Color(190, 96, 0));
        kButton_Grafica.setkIndicatorColor(new java.awt.Color(109, 37, 50));
        kButton_Grafica.setkPressedColor(new java.awt.Color(133, 78, 45));
        kButton_Grafica.setkSelectedColor(new java.awt.Color(133, 78, 45));
        kButton_Grafica.setkStartColor(new java.awt.Color(190, 96, 0));
        kButton_Grafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_GraficaActionPerformed(evt);
            }
        });

        jLabel_DATOS_ultimo.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_ultimo.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_ultimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_antepenultimo.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_antepenultimo.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_antepenultimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_penultimo.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_penultimo.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_penultimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_Titulo.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_Titulo.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_DATOS_Titulo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_antepenultimoColor.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_antepenultimoColor.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_antepenultimoColor.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_antepenultimoColor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_antepenultimoColor.setOpaque(true);

        jLabel_DATOS_penultimoColor.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_penultimoColor.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_penultimoColor.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_penultimoColor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_penultimoColor.setOpaque(true);

        jLabel_DATOS_ultimoColor.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_ultimoColor.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_ultimoColor.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_ultimoColor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_ultimoColor.setOpaque(true);

        jLabel_DATOS_antepenultimoNombre.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_antepenultimoNombre.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_antepenultimoNombre.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_antepenultimoNombre.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_antepenultimoNombre.setOpaque(true);

        jLabel_DATOS_penultimoNombre.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_penultimoNombre.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_penultimoNombre.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_penultimoNombre.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_penultimoNombre.setOpaque(true);

        jLabel_DATOS_ultimo_Nombre.setBackground(new java.awt.Color(0, 102, 102));
        jLabel_DATOS_ultimo_Nombre.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_ultimo_Nombre.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_ultimo_Nombre.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel_DATOS_ultimo_Nombre.setOpaque(true);

        jLabel_DATOS_ultimoGasto.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_ultimoGasto.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_ultimoGasto.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_penultimoGasto.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_penultimoGasto.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_penultimoGasto.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_DATOS_antepenultimoGasto.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_DATOS_antepenultimoGasto.setForeground(new java.awt.Color(247, 249, 253));
        jLabel_DATOS_antepenultimoGasto.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout kGradientPanel_DATOSLayout = new javax.swing.GroupLayout(kGradientPanel_DATOS);
        kGradientPanel_DATOS.setLayout(kGradientPanel_DATOSLayout);
        kGradientPanel_DATOSLayout.setHorizontalGroup(
            kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel_DATOSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_DATOS_Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addComponent(kButton_GenerarInforme, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(kButton_Grafica, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel_DATOS_penultimoColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_ultimoColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_antepenultimoColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_DATOS_penultimoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_ultimo_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_antepenultimoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_DATOS_ultimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_penultimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_antepenultimo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_DATOS_ultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_penultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel_DATOS_antepenultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        kGradientPanel_DATOSLayout.setVerticalGroup(
            kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel_DATOSLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_DATOS_Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addComponent(jLabel_DATOS_ultimo, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_penultimo, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_antepenultimo, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addComponent(jLabel_DATOS_ultimoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_penultimoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_antepenultimoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addComponent(jLabel_DATOS_ultimo_Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_penultimoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_antepenultimoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(kGradientPanel_DATOSLayout.createSequentialGroup()
                        .addComponent(jLabel_DATOS_ultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_penultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_DATOS_antepenultimoGasto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(72, 72, 72)
                .addGroup(kGradientPanel_DATOSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kButton_Grafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kButton_GenerarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97))
        );

        kButton_Insertar.setBackground(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setText("OK");
        kButton_Insertar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_Insertar.setkBackGroundColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkEndColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkForeGround(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverForeGround(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkIndicatorColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkStartColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_InsertarActionPerformed(evt);
            }
        });

        kButton_NuevoColor.setBackground(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setText("Color");
        kButton_NuevoColor.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_NuevoColor.setkBackGroundColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkEndColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkForeGround(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverForeGround(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkIndicatorColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkStartColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_NuevoColorActionPerformed(evt);
            }
        });

        jTextField_nuevaCategoria.setBackground(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField_nuevaCategoria.setForeground(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.setText("nueva categoria");
        jTextField_nuevaCategoria.setToolTipText("nombre");
        jTextField_nuevaCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 4));
        jTextField_nuevaCategoria.setName("nuevo"); // NOI18N
        jTextField_nuevaCategoria.setSelectionColor(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField_nuevaCategoriaFocusLost(evt);
            }
        });

        kButton_InsertarNuevoGasto.setForeground(new java.awt.Color(51, 51, 51));
        kButton_InsertarNuevoGasto.setText("OK");
        kButton_InsertarNuevoGasto.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_InsertarNuevoGasto.setkBackGroundColor(new java.awt.Color(229, 229, 229));
        kButton_InsertarNuevoGasto.setkEndColor(new java.awt.Color(35, 147, 147));
        kButton_InsertarNuevoGasto.setkHoverColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevoGasto.setkHoverEndColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevoGasto.setkHoverForeGround(new java.awt.Color(167, 204, 204));
        kButton_InsertarNuevoGasto.setkHoverStartColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevoGasto.setkIndicatorColor(new java.awt.Color(167, 204, 204));
        kButton_InsertarNuevoGasto.setkPressedColor(new java.awt.Color(0, 51, 51));
        kButton_InsertarNuevoGasto.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_InsertarNuevoGasto.setkStartColor(new java.awt.Color(21, 80, 80));
        kButton_InsertarNuevoGasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kButton_InsertarNuevoGastoActionPerformed(evt);
            }
        });

        jLabel_error.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        jLabel_error.setForeground(new java.awt.Color(255, 0, 0));

        jLabel_infoE.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_infoE.setForeground(new java.awt.Color(167, 204, 204));
        jLabel_infoE.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_infoE.setText("Gasto en €");
        jLabel_infoE.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel_infoC.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jLabel_infoC.setForeground(new java.awt.Color(167, 204, 204));
        jLabel_infoC.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel_infoC.setText("Concepto");
        jLabel_infoC.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel_TITULO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_infoE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_gastosNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField_motivo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_infoC, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(kButton_InsertarNuevoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap(125, Short.MAX_VALUE)
                        .addComponent(kGradientPanel_DATOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_error, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField_nuevaCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(kButton_NuevoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(kButton_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel_TITULO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_motivo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_gastosNuevos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kButton_InsertarNuevoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_infoE)
                            .addComponent(jLabel_infoC))
                        .addGap(14, 14, 14)
                        .addComponent(kGradientPanel_DATOS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kButton_Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_nuevaCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kButton_NuevoColor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_error, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTextField_motivo.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Método que se activa cuando el puntero del ratón entra en el área del
     * kGradientPanel1. Cambia el borde del jScrollPane1 a un borde vacío,
     * eliminando cualquier borde que pueda estar presente.
     *
     * @param evt Evento del ratón que desencadena la ejecución del método.
     */
    private void kGradientPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MouseEntered
        jScrollPane1.setBorder(BorderFactory.createEmptyBorder());

    }//GEN-LAST:event_kGradientPanel1MouseEntered
    /**
     * Método que se activa cuando se presiona una tecla en el campo de texto
     * jTextField_gastosNuevos. Si la tecla presionada es la tecla ENTER, llama
     * al método anadir(). Indica al sistema operativo que no debe procesar el
     * evento de teclado.
     *
     * @param evt Evento de teclado que desencadena la ejecución del método.
     */
    private void jTextField_gastosNuevosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_gastosNuevosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            anadir();

            // Indica al sistema operativo que no debe procesar el evento de teclado
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_gastosNuevosKeyPressed
    /**
     * Método que se activa cuando se presiona una tecla en el campo de texto
     * jTextField_motivo. Si la tecla presionada es la tecla ENTER, llama al
     * método anadir(). Indica al sistema operativo que no debe procesar el
     * evento de teclado.
     *
     * @param evt Evento de teclado que desencadena la ejecución del método.
     */
    private void jTextField_motivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_motivoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            anadir();

            // Indica al sistema operativo que no debe procesar el evento de teclado
            evt.consume();
        }
    }//GEN-LAST:event_jTextField_motivoKeyPressed
/////////

    /**
     * Método que se activa cuando el campo de texto jTextField_gastosNuevos
     * pierde el foco. Cambia el fondo del campo de texto a un tono de verde
     * oscuro (0, 102, 102).
     *
     * @param evt Evento de pérdida de foco que desencadena la ejecución del
     * método.
     */

    private void jTextField_gastosNuevosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_gastosNuevosFocusLost

        jTextField_gastosNuevos.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_jTextField_gastosNuevosFocusLost
    /**
     * Método que se activa cuando el campo de texto jTextField_gastosNuevos
     * obtiene el foco. Establece el texto del campo de texto como vacío y
     * cambia el fondo a un tono de verde más oscuro (7, 78, 78).
     *
     * @param evt Evento de obtención de foco que desencadena la ejecución del
     * método.
     */
    private void jTextField_gastosNuevosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_gastosNuevosFocusGained
        jTextField_gastosNuevos.setText("");
        jTextField_gastosNuevos.setBackground(new java.awt.Color(7, 78, 78));
    }//GEN-LAST:event_jTextField_gastosNuevosFocusGained
    /**
     * Método que se activa cuando el campo de texto jTextField_motivo obtiene
     * el foco. Establece el texto del campo de texto como vacío y cambia el
     * fondo a un tono de verde más oscuro (7, 78, 78).
     *
     * @param evt Evento de obtención de foco que desencadena la ejecución del
     * método.
     */
    private void jTextField_motivoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motivoFocusGained
        jTextField_motivo.setText("");
        jTextField_motivo.setBackground(new java.awt.Color(7, 78, 78));
    }//GEN-LAST:event_jTextField_motivoFocusGained
    /**
     * Método que se activa cuando el campo de texto jTextField_motivo pierde el
     * foco. Cambia el fondo del campo de texto a un tono de verde oscuro (0,
     * 102, 102).
     *
     * @param evt Evento de pérdida de foco que desencadena la ejecución del
     * método.
     */
    private void jTextField_motivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_motivoFocusLost

        jTextField_motivo.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_jTextField_motivoFocusLost
    /**
     * Método que se activa cuando se presiona una tecla en la lista
     * jList_categorias. Si la tecla presionada es la tecla ENTER, llama a los
     * métodos anadir() y mostrarDatosCategoria(). Indica al sistema operativo
     * que no debe procesar el evento de teclado.
     *
     * @param evt Evento de teclado que desencadena la ejecución del método.
     */
    private void jList_categoriasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_categoriasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            anadir();
            mostrarDatosCategoria();
            // Indica al sistema operativo que no debe procesar el evento de teclado
            evt.consume();
        }
    }//GEN-LAST:event_jList_categoriasKeyPressed
    /**
     * Método que se activa cuando se presiona una tecla en el panel
     * kGradientPanel1. Si la tecla presionada es la tecla ENTER, llama al
     * método anadir(). Indica al sistema operativo que no debe procesar el
     * evento de teclado.
     *
     * @param evt Evento de teclado que desencadena la ejecución del método.
     */
    private void kGradientPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kGradientPanel1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            anadir();

            // Indica al sistema operativo que no debe procesar el evento de teclado
            evt.consume();
        }
    }//GEN-LAST:event_kGradientPanel1KeyPressed
    /**
     * Método que se activa cuando se hace clic en el botón
     * kButton_InsertarNuevaCat. Muestra los elementos que estaban ocultos.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_InsertarNuevaCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_InsertarNuevaCatActionPerformed
        //hacemos que se vean
        mostrar();


    }//GEN-LAST:event_kButton_InsertarNuevaCatActionPerformed
    /**
     * Método que se activa cuando se selecciona un elemento en la lista
     * jList_categorias. Cambia el color del fondo y muestra los tres últimos
     * gastos de la categoría seleccionada.
     *
     * @param evt Evento de cambio de selección que desencadena la ejecución del
     * método.
     */
    private void jList_categoriasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList_categoriasValueChanged
        cambiarColor();
        //mostramos los tres últimos gastos de la categoría que está seleccionada
        mostrarDatosCategoria();
    }//GEN-LAST:event_jList_categoriasValueChanged
    /**
     * Método que se activa cuando se hace clic en el botón kButton_Insertar.
     * Obtiene el nombre y color de la nueva categoría desde los campos de texto
     * y botón de selección de color. Realiza varias validaciones, como
     * verificar la longitud del nombre, asegurarse de que el nombre no esté
     * repetido y que el color seleccionado no esté en la lista de categorías
     * existentes. En caso de superar alguna validación, muestra un mensaje de
     * error y ajusta el formato del campo de texto. Si pasa las validaciones,
     * crea una nueva instancia de la clase Categoria y la agrega a las listas
     * de categorías y nombres. Finalmente, oculta la interfaz para agregar una
     * nueva categoría.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_InsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_InsertarActionPerformed
        String nombre;
        boolean igual = false;
        int limite = 16;
        //cogemos los datos

        nombre = jTextField_nuevaCategoria.getText();
        color = kButton_NuevoColor.kEndColor;

        //   baseColor = kButton_NuevoColor.kEndColor;
        baseColor = new BaseColor(kButton_NuevoColor.kEndColor.getRed(),
                kButton_NuevoColor.kEndColor.getGreen(), kButton_NuevoColor.kEndColor.getBlue(), kButton_NuevoColor.kEndColor.getAlpha());

        //comprobamos que el texto no excede el límite
        if (nombre.length() > limite) {
            igual = true;
            jLabel_error.setText("El nombre es demasiado largo");
            jTextField_nuevaCategoria.setForeground(Color.red);
        }
        //comprobamos que el nombre no se repite
        for (int i = 0; i < lista.size(); i++) {
            if (nombre.equals(lista.elementAt(i))) {
                jLabel_error.setText("Ya existe este nombre");
                jTextField_nuevaCategoria.setForeground(Color.red);
                igual = true;
                break;
            }
        }
        //comprobamos que el color que ha elegido no está ya en la lista de categorías
        for (int i = 0; i < listaCategorias.size(); i++) {
            if (color.equals(listaCategorias.elementAt(i).getColor())) {
                jLabel_error.setText("Selecciona un color diferente");
                igual = true;
                break;
            }
        }
        if (!igual) {

            jLabel_error.setText("");
            jTextField_nuevaCategoria.setForeground(new Color(255, 255, 255));
            Categoria nuevaCat = new Categoria(color, baseColor, nombre);
            listaCategorias.addElement(nuevaCat);
            lista.addElement(nuevaCat.getNombre());
            ocultar();
        }


    }//GEN-LAST:event_kButton_InsertarActionPerformed
    /**
     * Método que se activa cuando se hace clic en el botón kButton_NuevoColor.
     * Abre un selector de colores y asigna el color seleccionado al botón.
     * Actualiza diferentes propiedades del botón con el nuevo color.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_NuevoColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_NuevoColorActionPerformed
        JColorChooser ventanaDeColores = new JColorChooser();
        color = ventanaDeColores.showDialog(null, "Seleccione un Color", color);
        kButton_NuevoColor.kEndColor = color;
        kButton_NuevoColor.kStartColor = color;
        kButton_NuevoColor.kHoverEndColor = color;
        kButton_NuevoColor.kHoverStartColor = color;
    }//GEN-LAST:event_kButton_NuevoColorActionPerformed
    /**
     * Método que se activa cuando se hace clic en el botón kButton_Grafica.
     * Alterna entre mostrar datos y ocultar gráfica, o mostrar gráfica y
     * ocultar datos, según el estado actual del botón.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_GraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_GraficaActionPerformed
        repaint();
        if (kButton_Grafica.getText().equalsIgnoreCase("Datos")) {
            kButton_Grafica.setText("Gráfica");
            ocultarGrafica();
        } else {
            kButton_Grafica.setText("Datos");
            ocultarDatos();
        }
    }//GEN-LAST:event_kButton_GraficaActionPerformed
    /**
     * Método que se activa cuando se hace clic en el botón
     * kButton_InsertarNuevoGasto. Llama al método anadir() para agregar un
     * nuevo gasto.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_InsertarNuevoGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_InsertarNuevoGastoActionPerformed
        anadir();
    }//GEN-LAST:event_kButton_InsertarNuevoGastoActionPerformed
    /**
     * Método que se activa cuando se hace clic en el botón
     * kButton_GenerarInforme. Llama a los métodos pdfPrueba() y csv() para
     * generar un informe en formato PDF y CSV.
     *
     * @param evt Evento de clic que desencadena la ejecución del método.
     */
    private void kButton_GenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kButton_GenerarInformeActionPerformed
        pdfPrueba();
        csv();

    }//GEN-LAST:event_kButton_GenerarInformeActionPerformed
    /**
     * Método que se activa cuando el campo de texto jTextField_nuevaCategoria
     * pierde el foco. Cambia el fondo del campo de texto a un tono de verde
     * oscuro (0, 102, 102).
     *
     * @param evt Evento de pérdida de foco que desencadena la ejecución del
     * método.
     */
    private void jTextField_nuevaCategoriaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_nuevaCategoriaFocusLost
        jTextField_nuevaCategoria.setBackground(new java.awt.Color(0, 102, 102));
    }//GEN-LAST:event_jTextField_nuevaCategoriaFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ventana v = new Ventana();
                v.setLocationRelativeTo(null);
                v.setVisible(true);

            }
        });
    }

    /**
     * Sobrescribe el método paint para personalizar la representación gráfica
     * de las categorías en la interfaz. Si el botón kButton_Grafica tiene el
     * texto "Gráfica", no realiza ninguna acción. Si el texto es diferente,
     * dibuja un gráfico de sectores representando proporcionalmente los gastos
     * de cada categoría. Utiliza colores y ángulos calculados en base a los
     * datos de las categorías.
     *
     * @param g Objeto Graphics utilizado para dibujar en la interfaz.
     */
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (kButton_Grafica.getText().equalsIgnoreCase("Gráfica")) {

        } else {
            g.setColor(new Color(21, 80, 80));
            g.fillArc(255, 300, 180, 180, 0, 360);
            //la suma de todos corresponde a 360º
            float suma = 0;
            //sumamos todos los gastos para obtener el total
            for (int i = 0; i < listaCategorias.size(); i++) {
                suma = suma + listaCategorias.getElementAt(i).getGasto();
            }
            try {
                for (int i = 0; i < listaCategorias.getSize(); i++) {
                    //color depende de la categoría

                    g.setColor(listaCategorias.elementAt(i).getColor());
                    comienzo = grados + comienzo;
                    grados = (int) ((listaCategorias.elementAt(i).getGastoInt() * 360) / suma);
                    g.fillArc(255, 300, 180, 180, comienzo, grados);

                }
            } catch (Exception e) {

            }
        }

    }

    /**
     * Muestra los datos de la categoría seleccionada en la interfaz gráfica.
     * Restaura el texto del botón kButton_Grafica a "Gráfica" y repinta la
     * interfaz gráfica. Muestra información sobre los últimos gastos en la
     * categoría seleccionada, incluyendo conceptos y cantidades. Ajusta los
     * colores de fondo y texto según la cantidad de gastos en la categoría.
     */
    public void mostrarDatosCategoria() {

        kButton_Grafica.setText("Gráfica");
        repaint();

        String categoria = "";
        int indice = 0;
        for (int i = 0; i < listaCategorias.size(); i++) {
            if (jList_categorias.getSelectedValue().equalsIgnoreCase(listaCategorias.elementAt(i).getNombre())) {
                categoria = listaCategorias.elementAt(i).getNombre();
                indice = i;

                break;
            }

        }
        categoria = categoria.toUpperCase();

//ocultamos los datos que no nos hacen falta
        Color colorFondo = new Color(0, 102, 102);
        jLabel_DATOS_ultimo_Nombre.setForeground(colorFondo);

        jLabel_DATOS_ultimoColor.setBackground(colorFondo);

        jLabel_DATOS_penultimoNombre.setForeground(colorFondo);

        jLabel_DATOS_penultimoColor.setBackground(colorFondo);

        jLabel_DATOS_antepenultimoNombre.setForeground(colorFondo);

        jLabel_DATOS_antepenultimoColor.setBackground(colorFondo);

        jLabel_DATOS_Titulo.setText("ÚLTIMOS GASTOS EN " + categoria + "  " + listaCategorias.elementAt(indice).getGasto() + "€");

        //colores y ultimos datos
        if (listaCategorias.elementAt(indice).getGasto() != 0) {

            jLabel_DATOS_ultimo.setText(listaCategorias.elementAt(indice).getUltimoConcepto() + "...... ");
            jLabel_DATOS_ultimoGasto.setText(listaCategorias.elementAt(indice).getUltimoGasto());

            jLabel_DATOS_penultimo.setText(listaCategorias.elementAt(indice).getConceptos(2) + "...... ");
            jLabel_DATOS_penultimoGasto.setText(listaCategorias.elementAt(indice).getGastos(2));

            jLabel_DATOS_antepenultimo.setText(listaCategorias.elementAt(indice).getConceptos(3) + "...... ");
            jLabel_DATOS_antepenultimoGasto.setText(listaCategorias.elementAt(indice).getGastos(3));

            //cambiamos el color para que se vea el texto
            color = new Color(255, 255, 255);

            jLabel_DATOS_Titulo.setForeground(color);
            jLabel_DATOS_ultimo.setForeground(color);
            jLabel_DATOS_ultimo_Nombre.setForeground(colorFondo);
            jLabel_DATOS_ultimoGasto.setForeground(color);
            jLabel_DATOS_ultimoColor.setBackground(listaCategorias.elementAt(indice).getColor());

            jLabel_DATOS_penultimo.setForeground(color);
            jLabel_DATOS_penultimoNombre.setForeground(colorFondo);
            jLabel_DATOS_penultimoGasto.setForeground(color);
            jLabel_DATOS_penultimoColor.setBackground(listaCategorias.elementAt(indice).getColor());

            jLabel_DATOS_antepenultimo.setForeground(color);
            jLabel_DATOS_antepenultimoNombre.setForeground(colorFondo);
            jLabel_DATOS_antepenultimoGasto.setForeground(color);
            jLabel_DATOS_antepenultimoColor.setBackground(listaCategorias.elementAt(indice).getColor());
        } else {
            jLabel_DATOS_ultimo.setForeground(colorFondo);
            jLabel_DATOS_ultimo_Nombre.setForeground(colorFondo);
            jLabel_DATOS_ultimoGasto.setForeground(colorFondo);
            jLabel_DATOS_ultimoColor.setBackground(colorFondo);

            jLabel_DATOS_penultimo.setForeground(colorFondo);
            jLabel_DATOS_penultimoNombre.setForeground(colorFondo);
            jLabel_DATOS_penultimoGasto.setForeground(colorFondo);

            jLabel_DATOS_antepenultimo.setForeground(colorFondo);
            jLabel_DATOS_antepenultimoNombre.setForeground(colorFondo);
            jLabel_DATOS_antepenultimoGasto.setForeground(colorFondo);
        }

    }

    /**
     * Oculta la gráfica y muestra información sobre los últimos gastos de las
     * tres últimas categorías en la interfaz gráfica. Restaura el texto del
     * botón kButton_Grafica a "Gráfica" y repinta la interfaz gráfica. Ajusta
     * colores y muestra conceptos, cantidades y nombres de las categorías.
     */
    public void ocultarGrafica() {
        kButton_Grafica.setText("Gráfica");
        repaint();
        int cantidad = listaCategorias.size();

        jLabel_DATOS_Titulo.setText("ÚLTIMOS GASTOS");
        //colores y ultimos datos

        jLabel_DATOS_ultimo_Nombre.setText(listaCategorias.elementAt(cantidad - 1).getNombre());
        jLabel_DATOS_ultimoColor.setBackground(listaCategorias.elementAt(cantidad - 1).getColor());
        jLabel_DATOS_ultimo.setText(listaCategorias.elementAt(cantidad - 1).getUltimoConcepto() + "...... ");
        jLabel_DATOS_ultimoGasto.setText(listaCategorias.elementAt(cantidad - 1).getUltimoGasto());

        jLabel_DATOS_penultimoNombre.setText(listaCategorias.elementAt(cantidad - 2).getNombre());
        jLabel_DATOS_penultimoColor.setBackground(listaCategorias.elementAt(cantidad - 2).getColor());
        jLabel_DATOS_penultimo.setText(listaCategorias.elementAt(cantidad - 2).getUltimoConcepto() + "...... ");
        jLabel_DATOS_penultimoGasto.setText(listaCategorias.elementAt(cantidad - 2).getUltimoGasto());

        jLabel_DATOS_antepenultimoNombre.setText(listaCategorias.elementAt(cantidad - 3).getNombre());
        jLabel_DATOS_antepenultimoColor.setBackground(listaCategorias.elementAt(cantidad - 3).getColor());
        jLabel_DATOS_antepenultimo.setText(listaCategorias.elementAt(cantidad - 3).getUltimoConcepto() + "...... ");
        jLabel_DATOS_antepenultimoGasto.setText(listaCategorias.elementAt(cantidad - 3).getUltimoGasto());

        //cambiamos el color para que se vea el texto
        color = new Color(255, 255, 255);
        jLabel_DATOS_Titulo.setForeground(color);
        jLabel_DATOS_ultimo.setForeground(color);
        jLabel_DATOS_ultimo_Nombre.setForeground(color);
        jLabel_DATOS_ultimoGasto.setForeground(color);

        jLabel_DATOS_penultimo.setForeground(color);
        jLabel_DATOS_penultimoNombre.setForeground(color);
        jLabel_DATOS_penultimoGasto.setForeground(color);

        jLabel_DATOS_antepenultimo.setForeground(color);
        jLabel_DATOS_antepenultimoNombre.setForeground(color);
        jLabel_DATOS_antepenultimoGasto.setForeground(color);
    }

    /**
     * Este método oculta la información detallada sobre los últimos gastos en
     * la interfaz gráfica, cambiando el texto del botón kButton_Grafica a
     * "Datos" y ajustando los colores de los elementos visuales.
     */
    public void ocultarDatos() {
        kButton_Grafica.setText("Datos");
        color = new Color(0, 102, 102);
        jLabel_DATOS_Titulo.setForeground(color);
        jLabel_DATOS_ultimo.setForeground(color);
        jLabel_DATOS_ultimo_Nombre.setForeground(color);
        jLabel_DATOS_ultimoGasto.setForeground(color);
        jLabel_DATOS_ultimoColor.setBackground(color);

        jLabel_DATOS_penultimo.setForeground(color);
        jLabel_DATOS_penultimoNombre.setForeground(color);
        jLabel_DATOS_penultimoGasto.setForeground(color);
        jLabel_DATOS_penultimoColor.setBackground(color);

        jLabel_DATOS_antepenultimo.setForeground(color);
        jLabel_DATOS_antepenultimoNombre.setForeground(color);
        jLabel_DATOS_antepenultimoGasto.setForeground(color);
        jLabel_DATOS_antepenultimoColor.setBackground(color);

        repaint();
    }

    /**
     * Este método oculta ciertos elementos visuales al realizar una acción
     * específica, como cambiar el aspecto del botón "Insertar", el color y
     * nombre de la nueva categoría.
     */
    public void ocultar() {
        //insertar
        kButton_Insertar.setBackground(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setText("OK");
        kButton_Insertar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_Insertar.setkBackGroundColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkEndColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkForeGround(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverForeGround(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkIndicatorColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkStartColor(new java.awt.Color(0, 102, 102));
        //color
        kButton_NuevoColor.setBackground(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setText("Color");
        kButton_NuevoColor.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_NuevoColor.setkBackGroundColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkEndColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkForeGround(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverEndColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverForeGround(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkIndicatorColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkPressedColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkStartColor(new java.awt.Color(0, 102, 102));
        //nombre
        jTextField_nuevaCategoria.setBackground(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField_nuevaCategoria.setForeground(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.setText("nueva categoria");
        jTextField_nuevaCategoria.setToolTipText("nombre");
        jTextField_nuevaCategoria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102), 4));
        jTextField_nuevaCategoria.setName("nuevo"); // NOI18N
        jTextField_nuevaCategoria.setSelectionColor(new java.awt.Color(0, 102, 102));
    }

    /**
     * Este método muestra ciertos elementos visuales al realizar una acción
     * específica, como cambiar el aspecto del botón "Insertar", el color y
     * nombre de la nueva categoría.
     */
    public void mostrar() {
        //insertar
        kButton_Insertar.setkForeGround(new java.awt.Color(255, 255, 255));
        kButton_Insertar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_Insertar.setkBackGroundColor(new java.awt.Color(229, 229, 229));
        kButton_Insertar.setkEndColor(new java.awt.Color(35, 147, 147));
        kButton_Insertar.setkHoverColor(new java.awt.Color(21, 80, 80));
        kButton_Insertar.setkHoverEndColor(new java.awt.Color(21, 80, 80));
        kButton_Insertar.setkHoverForeGround(new java.awt.Color(167, 204, 204));
        kButton_Insertar.setkHoverStartColor(new java.awt.Color(21, 80, 80));
        kButton_Insertar.setkIndicatorColor(new java.awt.Color(167, 204, 204));
        kButton_Insertar.setkPressedColor(new java.awt.Color(0, 51, 51));
        kButton_Insertar.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_Insertar.setkStartColor(new java.awt.Color(21, 80, 80));
        //poner nombre 
        jTextField_nuevaCategoria.setBackground(new java.awt.Color(0, 102, 102));
        jTextField_nuevaCategoria.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        jTextField_nuevaCategoria.setForeground(new java.awt.Color(255, 255, 255));
        jTextField_nuevaCategoria.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_nuevaCategoria.setText("nombre");
        jTextField_nuevaCategoria.setToolTipText("nombre");
        jTextField_nuevaCategoria.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(167, 204, 204), 2, true));
        jTextField_nuevaCategoria.setName("Gasto"); // NOI18N
        jTextField_nuevaCategoria.setSelectionColor(new java.awt.Color(167, 204, 204));

        //elegir color
        kButton_NuevoColor.setkForeGround(new java.awt.Color(255, 255, 255));
        kButton_NuevoColor.setText("Color");
        kButton_NuevoColor.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        kButton_NuevoColor.setkBackGroundColor(new java.awt.Color(229, 229, 229));
        kButton_NuevoColor.setkEndColor(new java.awt.Color(35, 147, 147));
        kButton_NuevoColor.setkHoverColor(new java.awt.Color(21, 80, 80));
        kButton_NuevoColor.setkHoverEndColor(new java.awt.Color(21, 80, 80));
        kButton_NuevoColor.setkHoverForeGround(new java.awt.Color(167, 204, 204));
        kButton_NuevoColor.setkHoverStartColor(new java.awt.Color(21, 80, 80));
        kButton_NuevoColor.setkIndicatorColor(new java.awt.Color(167, 204, 204));
        kButton_NuevoColor.setkPressedColor(new java.awt.Color(0, 51, 51));
        kButton_NuevoColor.setkSelectedColor(new java.awt.Color(0, 102, 102));
        kButton_NuevoColor.setkStartColor(new java.awt.Color(21, 80, 80));
    }

    /**
     * Este método cambia el color de fondo del componente "Colores" basándose
     * en la categoría seleccionada en la lista. La información se obtiene de la
     * lista de categorías y se utiliza para actualizar la apariencia visual.
     */
    public void cambiarColor() {
        //ponemos el color de la categoría seleccionada en Color
        for (int i = 0; i < listaCategorias.size(); i++) {
            if (jList_categorias.getSelectedValue().equalsIgnoreCase(listaCategorias.elementAt(i).getNombre())) {
                Colores.setBackground(listaCategorias.getElementAt(i).getColor());
                repaint();
                break;
            }

        }
    }

    /**
     * Este método añade un gasto a la categoría seleccionada y actualiza la
     * lista de gastos individuales. También realiza validaciones, como
     * comprobar que no hay letras en el campo de gastos y que haya una
     * categoría seleccionada. Si la categoría no está seleccionada, se resalta
     * visualmente el área correspondiente.
     */
    public void anadir() {

        try {
            //comprobamos que no hay letras
            //comprobamos que hay una categoría seleccionada
            if (jList_categorias.getSelectedValue() != null) {
                String gasto = jTextField_gastosNuevos.getText();
                //comprobamos que el gasto no es un número demasiado largo ni menor de 0
                if (Float.parseFloat(gasto) < 9999999 && Float.parseFloat(gasto)>0) {
                    jLabel_infoE.setText("Gasto en €");
                    gastosLista.addElement(gasto);
                    //cambiamos el color para que el usuario entienda que su numero ahora es correcto
                    jTextField_gastosNuevos.setBackground(new java.awt.Color(0,102,102));
                    
                    for (int i = 0; i < listaCategorias.size(); i++) {
                        if (jList_categorias.getSelectedValue().equalsIgnoreCase(listaCategorias.elementAt(i).getNombre())) {
                            listaCategorias.elementAt(i).anadirGasto(Float.parseFloat(gasto));

                            listaCategorias.elementAt(i).anadirGastoIndividual(Float.parseFloat(gasto), jTextField_motivo.getText());
                        }
                    }
                    cambiarColor();
                } else {
                    jLabel_infoE.setText("0.01€ - 9999999.99€");
                    jTextField_gastosNuevos.setBackground(new java.awt.Color(200, 0, 0));
                }

            } else {
                jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED,
                        new java.awt.Color(200, 0, 0),
                        new java.awt.Color(200, 0, 0),
                        new java.awt.Color(200, 0, 0),
                        new java.awt.Color(200, 0, 0)));
            }

        } catch (NumberFormatException excepcion) {
            jTextField_gastosNuevos.setBackground(new java.awt.Color(200, 0, 0));

        }
        if (kButton_Grafica.getText().equalsIgnoreCase("Gráfica")) {
            ocultarGrafica();
        }

    }
//informes

    /**
     * Este método guarda la información de gastos en un archivo CSV. Permite al
     * usuario seleccionar la ruta de destino y establece un filtro para
     * archivos CSV.
     */
    public void csv() {
        // Creamos un JFileChooser para que el usuario decida la ruta
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Informe en CSV");

        // ponemos un filtro de extensión para limitar a archivos CSV
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos CSV (*.csv)", "csv");
        fileChooser.setFileFilter(filtro);

        int eleccion = fileChooser.showSaveDialog(null);
//si le da a aceptar guarda el archivo
        if (eleccion == JFileChooser.APPROVE_OPTION) {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();

            // Asegúrate de que el archivo tenga la extensión .csv
            if (!ruta.toLowerCase().endsWith(".csv")) {
                ruta += ".csv";
            }

            try (FileWriter csvWriter = new FileWriter(ruta)) {
                csvWriter.append("Categoria,Concepto,Gasto (€)\n");

                for (int i = 0; i < listaCategorias.getSize(); i++) {
                    String nombreCategoria = listaCategorias.elementAt(i).getNombre();
                    for (int j = 0; j < listaCategorias.elementAt(i).gastosIndividuales.getSize(); j++) {
                        String concepto = listaCategorias.elementAt(i).conceptos.elementAt(j);
                        String gasto = listaCategorias.elementAt(i).getGastos(j + 1);

                        csvWriter.append(String.join(",", nombreCategoria, concepto, gasto));
                        csvWriter.append("\n");
                    }

                    String totalGastos = String.format("Total de gastos en esta categoría: %s€", listaCategorias.elementAt(i).getGasto());
                    csvWriter.append(String.join(",", nombreCategoria, totalGastos));
                    csvWriter.append("\n");
                }

            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * Este método guarda la información de gastos en un archivo PDF. Permite al
     * usuario seleccionar la ruta de destino y establece un filtro para
     * archivos PDF.
     */
    public void pdfPrueba() {
        // Creamos un JFileChooser para que el usuario decida la ruta
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar Informe en PDF");

        // ponemos un filtro de extensión para limitar a archivos CSV
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF (*.pdf)", "pdf");
        fileChooser.setFileFilter(filtro);

        int eleccion = fileChooser.showSaveDialog(null);
//si le da a aceptar guarda el archivo
        if (eleccion == JFileChooser.APPROVE_OPTION) {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();

            if (!ruta.toLowerCase().endsWith(".csv")) {
                ruta += ".csv";
            }
            Document document = new Document();

            try {

                PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Informe.pdf"));

                // Abrimos el documento pdf para poder escribir
                document.open();

                // Añadimos un rectángulo como fondo del encabezado
                PdfContentByte cb = writer.getDirectContentUnder();
                cb.setRGBColorFill(0, 102, 102); // Color de fondo
                cb.rectangle(0, document.getPageSize().getHeight(), document.getPageSize().getWidth(), -100);
                cb.fill();

                // Creamos una tabla con una fila y dos celdas
                Font fontEncabezado = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18, BaseColor.WHITE);
                //tabla encabezado
                PdfPTable tablaEncabezado = new PdfPTable(2);
                tablaEncabezado.setWidthPercentage(70);
                tablaEncabezado.setHorizontalAlignment(Element.ALIGN_LEFT);

                // Agregamos la imagen a la primera celda
                Image logo = Image.getInstance("G:\\Mi unidad\\DESARROLLO DE INTERFACES\\EJERCICIOS\\imgs\\monedaPequeña.png");
                //la alineamos a la derecha, para acercarla al texto

                PdfPCell imageCell = new PdfPCell(logo);
                imageCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
                imageCell.setBorder(Rectangle.NO_BORDER);

                tablaEncabezado.addCell(imageCell);

                //Y el titulo a la segunda
                Paragraph titulo = new Paragraph("Gastos de Gestión", fontEncabezado);
                //titulo.setAlignment(Element.ALIGN_CENTER);
                PdfPCell encabezado = new PdfPCell(titulo);
                encabezado.setBorder(Rectangle.NO_BORDER);
                encabezado.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tablaEncabezado.addCell(encabezado);
                document.add(tablaEncabezado);

                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                // Añadimos las categorías y sus gastos al documento
                for (int i = 0; i < listaCategorias.size(); i++) {
                    //negrita
                    Font fontNegrita = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD);
                    //normal
                    Font font = FontFactory.getFont(FontFactory.HELVETICA, 12);
                    Paragraph tituloTabla = new Paragraph("\nCategoría: " + listaCategorias.elementAt(i).getNombre(), fontNegrita);
                    document.add(tituloTabla);
                    document.add(new Paragraph("\n", font));
                    PdfPTable table = new PdfPTable(2);
                    table.setWidthPercentage(50);

                    //Encabezados de la tabla
                    int rojo = listaCategorias.elementAt(i).getColorBase().getRed();
                    int verde = listaCategorias.elementAt(i).getColorBase().getGreen();
                    int azul = listaCategorias.elementAt(i).getColorBase().getBlue();
                    Font fontTabla;
                    if ((rojo * 0.299 + verde * 0.587 + azul * 0.114) > 186) {
                        fontTabla = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD, BaseColor.BLACK);

                    } else {
                        fontTabla = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD, BaseColor.WHITE);
                    }
                    PdfPCell cell1 = new PdfPCell(new Phrase("Concepto", fontTabla));
                    PdfPCell cell2 = new PdfPCell(new Phrase("Gasto", fontTabla));
                    cell1.setBackgroundColor(listaCategorias.elementAt(i).getColorBase());
                    cell2.setBackgroundColor(listaCategorias.elementAt(i).getColorBase());
                    table.addCell(cell1);
                    table.addCell(cell2);

                    // Datos de gastos
                    for (int j = 0; j < listaCategorias.elementAt(i).gastosIndividuales.getSize(); j++) {
                        table.addCell(new PdfPCell(new Phrase(listaCategorias.elementAt(i).conceptos.elementAt(j), font)));
                        table.addCell(new PdfPCell(new Phrase(listaCategorias.elementAt(i).getGastos(j + 1), font)));
                    }

                    document.add(table);

                    // Añadimos el total de gastos por categoría
                    document.add(new Paragraph("\n"));
                    document.add(new Paragraph("Total de gastos en esta categoría: " + listaCategorias.elementAt(i).getGasto() + "€", fontNegrita));

                }
                Desktop.getDesktop().open(new File("Informe.pdf"));

            } catch (DocumentException | FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException ex) {

            } finally {
                // Cierra el documento

                document.close();
            }
        }
    }

    /*  app que solo registra gastos
        no hay limite de dinero    
        
    1. Interfaz
    crear categorias
        forma en la que se vea cuanto gastas en cada una
    2. Informes    
    generar informes en csv y pdf
    3. Documentación
         -desarrolladores
         -usuarios
    4. Ejecutable
    
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Colores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_DATOS_Titulo;
    private javax.swing.JLabel jLabel_DATOS_antepenultimo;
    private javax.swing.JLabel jLabel_DATOS_antepenultimoColor;
    private javax.swing.JLabel jLabel_DATOS_antepenultimoGasto;
    private javax.swing.JLabel jLabel_DATOS_antepenultimoNombre;
    private javax.swing.JLabel jLabel_DATOS_penultimo;
    private javax.swing.JLabel jLabel_DATOS_penultimoColor;
    private javax.swing.JLabel jLabel_DATOS_penultimoGasto;
    private javax.swing.JLabel jLabel_DATOS_penultimoNombre;
    private javax.swing.JLabel jLabel_DATOS_ultimo;
    private javax.swing.JLabel jLabel_DATOS_ultimoColor;
    private javax.swing.JLabel jLabel_DATOS_ultimoGasto;
    private javax.swing.JLabel jLabel_DATOS_ultimo_Nombre;
    private javax.swing.JLabel jLabel_bienvenida;
    private javax.swing.JLabel jLabel_error;
    private javax.swing.JLabel jLabel_infoC;
    private javax.swing.JLabel jLabel_infoE;
    public static javax.swing.JList<String> jList_categorias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField_gastosNuevos;
    private javax.swing.JTextField jTextField_motivo;
    private javax.swing.JTextField jTextField_nuevaCategoria;
    private com.k33ptoo.components.KButton kButton_GenerarInforme;
    private com.k33ptoo.components.KButton kButton_Grafica;
    private com.k33ptoo.components.KButton kButton_Insertar;
    private com.k33ptoo.components.KButton kButton_InsertarNuevaCat;
    private com.k33ptoo.components.KButton kButton_InsertarNuevoGasto;
    private com.k33ptoo.components.KButton kButton_NuevoColor;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    private com.k33ptoo.components.KGradientPanel kGradientPanel_DATOS;
    private com.k33ptoo.components.KGradientPanel kGradientPanel_TITULO;
    // End of variables declaration//GEN-END:variables
}
